( defvar rotate 3)
( defun blocked -p ()
(not (can-move -p : north )))
( i f (blocked -p) ( move 1) ( skip))
(
( i f (blocked -p) ( move 1) ( skip))
( turn : left )
)
( defvar one 1)
( defun foo (c p)
(put : chips c)
(put : balloons p)
( move rotate ))
(foo 1 3)
( defun goend ()
( i f (not blocked -p)
(( move one )
( goend ))
( skip)))
( defun fill ()
( repeat Spaces ( i f (not ( isZero ? myChips )) (put : chips 1) ))
)
( defun pickAllB ()
(pick : balloons balloonsHere )
)
(run - dirs : left :up : left : down : right )